{"version":3,"sources":["typingEffectV2.0.ts"],"names":[],"mappings":";;AAAA,IAAM,UAAU,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,CAAnB,EAKA;AACA;;AACA,IAAA,eAAA;AAAA;AAAA,YAAA;AAQI;AAGA,WAAA,eAAA,CAAY,mBAAZ,EAAyC,aAAzC,EAAkE,YAAlE,EAAwF,WAAxF,EAAoH;AARpH,SAAA,YAAA,GAAuB,CAAvB;AACA,SAAA,UAAA,GAAqB,CAArB;AAQI,QAAM,gBAAgB,GAAI,QAAQ,CAAC,aAAT,CAAoC,MAAI,mBAAxC,CAA1B;AACA,QAAI,CAAA,gBAAgB,KAAA,IAAhB,IAAA,gBAAgB,KAAA,KAAA,CAAhB,GAAgB,KAAA,CAAhB,GAAA,gBAAgB,CAAE,WAAlB,MAAkC,IAAlC,IAA0C,gBAAgB,KAAI,IAAlE,EAAwE,MAAM,IAAI,KAAJ,CAAU,EAAV,CAAN;AACxE,QAAI,YAAY,GAAG,CAAnB,EAAsB,MAAM,KAAK,CAAC,kCAAD,CAAX;AAEtB,SAAK,aAAL,GAAqB,aAArB;AACA,SAAK,YAAL,GAAoB,YAApB;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,cAAL,GAAsB,gBAAtB;AACH;;AAGD,EAAA,eAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AAEI,QAAI,kBAAJ;;AACA,QAAI,KAAK,WAAL,KAAqB,YAAzB,EAAuC;AACnC,MAAA,kBAAkB,GAAG,KAAK,aAAL,CAAmB,KAAK,UAAxB,EAAoC,KAAK,YAAzC,CAArB;AACH,KAFD,MAEO,IAAI,KAAK,WAAL,KAAqB,YAAzB,EAAuC;AAC1C,MAAA,kBAAkB,GAAG,KAAK,aAAL,CAAmB,KAAK,UAAxB,CAArB;AACH,KAPL,CAQI;AACA;AAEA;;;AAGA,SAAK,cAAL,CAAoB,WAApB,IAAmC,kBAAnC;AACA,SAAK,YAAL;;AAEA,QAAI,KAAK,YAAL,KAAsB,CAA1B,EAA6B;AACzB;AACA,UAAM,wBAAsB,GAAG,UAAU,CAAC,YAAA;AACtC,QAAA,KAAI,CAAC,UAAL;;AACA,QAAA,YAAY,CAAC,wBAAD,CAAZ;AACH,OAHwC,EAGtC,IAHsC,CAAzC;AAIH;;AAAA;;AAED,QAAI,KAAK,YAAL,GAAoB,CAAxB,EAA2B;AACvB,UAAM,WAAS,GAAG,UAAU,CAAC,YAAA;AACzB,QAAA,KAAI,CAAC,YAAL;;AACA,QAAA,YAAY,CAAC,WAAD,CAAZ;AACH,OAH2B,EAGzB,KAAK,YAHoB,CAA5B;AAIH,KA9BL,CAgCI;;AACH,GAjCD,CAvBJ,CA0DI;AACA;;;AAEA,EAAA,eAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AAEI,QAAI,KAAK,cAAL,CAAoB,WAApB,KAAoC,IAAxC,EAA8C,MAAM,KAAK,CAAC,iBAAD,CAAX,CAFlD,CAII;;AACA,SAAK,cAAL,CAAoB,WAApB,GAAkC,EAAlC;AACA,SAAK,YAAL,GANJ,CAOI;AAEA;AACA;AACA;;AAEA,QAAI,KAAK,YAAL,GAAoB,KAAK,aAAL,CAAmB,MAAnB,GAA4B,CAApD,EAAuD;AACnD,MAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ;AACA;AACH;;AAED,QAAI,KAAK,YAAL,KAAsB,CAA1B,EAA6B;AACzB;AACA,UAAM,wBAAsB,GAAG,UAAU,CAAC,YAAA;AACtC,QAAA,KAAI,CAAC,UAAL,GADsC,CAEtC;AACA;;AACA,QAAA,YAAY,CAAC,wBAAD,CAAZ;AACH,OALwC,EAKtC,IALsC,CAAzC;AAMH;;AAED,QAAM,SAAS,GAAG,UAAU,CAAC,YAAA;AACzB,MAAA,KAAI,CAAC,UAAL;;AACA,MAAA,YAAY,CAAC,SAAD,CAAZ;AACH,KAH2B,EAGzB,KAAK,YAHoB,CAA5B;AAQH,GApCD;;AAwCA,EAAA,eAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AAEI,SAAK,YAAL;AAGH,GALD;;AAMJ,SAAA,eAAA;AA3GA,CAAA,EAAA;;AA8GA,IAAM,UAAU,GAAG,IAAI,eAAJ,CAAoB,aAApB,EAAmC,UAAnC,EAA+C,IAA/C,EAAqD,YAArD,CAAnB,EAAsF;;AACtF,UAAU,CAAC,OAAX,IAKI;AACJ","file":"typingEffectV2.0.94c2171d.js","sourceRoot":"..\\tasks\\typingEffect","sourcesContent":["const tekstArray = [\"tekst1\", \"tekst2\", \"tekst3\"]\r\n\r\ntype TypingStyleType = \"typeByChar\" | \"typeByWord\";\r\n\r\n\r\n// POST\r\n// fetch(\"google.pl\", { strength: 101 }).then((data) => data.json()).then((data) => { console.log(data) }).catch((err) => { console.log(err) })\r\nclass TypingEffectV20 {\r\n\r\n    textToAnimate: string[]\r\n    activeLetter: number = 0\r\n    activeText: number = 0\r\n    animateElement: HTMLElement\r\n    writingSpeed: number\r\n    typingStyle: string\r\n    // avaliableKeys: {}\r\n\r\n\r\n    constructor(animateElementClass: string, textToAnimate: string[], writingSpeed: number, typingStyle: TypingStyleType) { \r\n        const elementToAnimate =  document.querySelector<HTMLElement>(`.${animateElementClass}`);\r\n        if (elementToAnimate?.textContent === null || elementToAnimate=== null) throw new Error(\"\")\r\n        if (writingSpeed < 0) throw Error(\"This number have to be positive.\")\r\n\r\n        this.textToAnimate = textToAnimate\r\n        this.writingSpeed = writingSpeed\r\n        this.typingStyle = typingStyle\r\n        this.animateElement = elementToAnimate\r\n    }\r\n\r\n\r\n    mainFunction() {\r\n\r\n        let textToAnimateStyle;\r\n        if (this.typingStyle === \"typeByChar\") {\r\n            textToAnimateStyle = this.textToAnimate[this.activeText][this.activeLetter]\r\n        } else if (this.typingStyle === \"typeByWord\") {\r\n            textToAnimateStyle = this.textToAnimate[this.activeText]\r\n        }\r\n        // \"tekst1\" / 1\r\n        // \"Ala ma kota\".split(\" \") / 3\r\n\r\n        // console.log(this.textToAnimate[this.activeText].length);\r\n        \r\n\r\n        this.animateElement.textContent += textToAnimateStyle\r\n        this.activeLetter++;\r\n\r\n        if (this.activeLetter === 1) {\r\n            // da się skrócić\r\n            const deleteCharacterTimeout = setTimeout(() => {\r\n                this.deleteText()\r\n                clearTimeout(deleteCharacterTimeout)\r\n            }, 3000)\r\n        };\r\n\r\n        if (this.activeLetter < 1) {\r\n            const timeoutId = setTimeout(() => {\r\n                this.mainFunction();\r\n                clearTimeout(timeoutId);\r\n            }, this.writingSpeed)\r\n        }\r\n\r\n        //w którym miejscu powinno nastąpić zwiekszenie indeksu tekstu oraz zerowanie indeksu liery?\r\n    }\r\n\r\n    // \"Ala ma kota\"\r\n    //\r\n\r\n    deleteText() {\r\n\r\n        if (this.animateElement.textContent === null) throw Error(\"Element is null\")\r\n\r\n        // const deletedText = this.animateElement.textContent.slice(0, -1)\r\n        this.animateElement.textContent = \"\"\r\n        this.activeLetter--\r\n        // console.log(this.activeLetter)\r\n\r\n        // ...\r\n        // this.activeText++\r\n        // console.log(this.activeLetter)\r\n\r\n        if (this.activeLetter > this.textToAnimate.length - 1) {\r\n            console.log(\"KONIEC DZIAŁANIA\")\r\n            return;\r\n        }\r\n\r\n        if (this.activeLetter === 0) {\r\n            // this.mainFunction()\r\n            const deleteCharacterTimeout = setTimeout(() => {\r\n                this.activeText++\r\n                // console.log(this.activeText)\r\n                // this.mainFunction()\r\n                clearTimeout(deleteCharacterTimeout)\r\n            }, 3000)\r\n        }\r\n\r\n        const timeoutId = setTimeout(() => {\r\n            this.deleteText();\r\n            clearTimeout(timeoutId);\r\n        }, this.writingSpeed)\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    appInit() {\r\n\r\n        this.mainFunction()\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nconst testAppV20 = new TypingEffectV20(\"animateSpan\", tekstArray, 2000, \"typeByWord\") // { timeoutTime: 400, writingType: \"letter\" | \"word\" }\r\ntestAppV20.appInit()\r\n\r\n\r\n\r\n\r\n    // trackMeNow-medium\r\n//asynchroniczność"]}