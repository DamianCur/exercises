{"version":3,"sources":["utility.ts","dynamicForm.ts"],"names":[],"mappings":"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","file":"dynamicForm.8a9e16c8.js","sourceRoot":"..\\tasks\\dynamicForm","sourcesContent":["import { InputInterface } from \"./dynamicForm\"\r\n\r\n\r\n\r\nconst isParameterAnArray = (parameter: [] | string) => {\r\n    return Array.isArray(parameter)\r\n}\r\n\r\nconst addAttributeToElement = (mainElement: HTMLElement, attributeName: string, attribiuteValue: string) => {\r\n    return mainElement.setAttribute(attributeName, attribiuteValue)\r\n}\r\n\r\nconst createElement = (elementToCreate: string): any => {\r\n    const newElement = document.createElement(elementToCreate)\r\n    return newElement\r\n}\r\n\r\nconst addChildToParent = (parent: HTMLElement, child: HTMLElement) => {\r\n    return parent.appendChild(child)\r\n}\r\n\r\nconst addTextToElement = (element: HTMLElement, textToAdd: string) => {\r\n    return element.innerHTML = textToAdd\r\n}\r\n\r\nconst arrayWithoutTypeProperty = (element: InputInterface) => {\r\n\r\n\r\n\r\n    const arrayElement = Object.entries(element)\r\n\r\n    const coppyOfArrayElement = [...arrayElement]\r\n\r\n    const indexOfTypeElement = coppyOfArrayElement.findIndex((el) => {\r\n        return el.includes(\"type\")\r\n    })\r\n    coppyOfArrayElement.splice(indexOfTypeElement, 1)\r\n\r\n\r\n\r\n    return coppyOfArrayElement\r\n}\r\n\r\nconst addAttributesToSpecifiedElement = (mainElement: HTMLElement, dataElement: String[][]) => {\r\n    dataElement.forEach((el) => {\r\n        const [attributeName, value] = el\r\n        addAttributeToElement(mainElement, attributeName, value)\r\n        //o co chodzi z tym błędem?\r\n    })\r\n}\r\n\r\n\r\n\r\nexport { isParameterAnArray, addAttributeToElement, createElement, addChildToParent, addTextToElement, arrayWithoutTypeProperty, addAttributesToSpecifiedElement }","import { isParameterAnArray, addAttributeToElement, createElement, addChildToParent, addTextToElement, arrayWithoutTypeProperty, addAttributesToSpecifiedElement } from \"./utility\"\r\n\r\n\r\nconst testSettings = {\r\n    action: '/contact/by-mail',\r\n    method: 'POST',\r\n    inputs: [\r\n        { type: 'header' },\r\n        { type: 'header', label: 'Skontaktuj się z nami' },\r\n        { name: 'yourEmail', type: 'email', placeholder: 'Wpisz swój email' },\r\n        { type: 'email' },\r\n        { name: 'content', type: 'textarea', placeholder: 'Wpisz treść wiadomości' },\r\n        { type: 'submit', label: 'Wyślij wiadomość' }\r\n    ]\r\n}\r\n\r\n\r\n\r\ninterface InputInterface {\r\n    type: string; label?: string;\r\n    placeholder?: string;\r\n    name?: string;\r\n}\r\n\r\ninterface ISettings {\r\n    action: string,\r\n    method: string,\r\n    inputs: Array<InputInterface>\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst generateFormOnPattern = (settings: ISettings): any => {\r\n    const wrapper = document.querySelector(\".wrapper\") as HTMLElement\r\n    const generatedForm = document.createElement(\"form\")\r\n    wrapper.appendChild(generatedForm);\r\n\r\n\r\n\r\n    const arraySettings = Object.entries(settings)\r\n\r\n\r\n    arraySettings.forEach((el) => {\r\n        const [key, value] = el;\r\n\r\n        if (isParameterAnArray(value)) {\r\n            const arrayValue = value as InputInterface[];\r\n            arrayValue.forEach((el) => {\r\n                let element = null;\r\n\r\n                switch (el.type) {\r\n                    case \"header\":\r\n                        element = createElement(\"h4\")\r\n                        addTextToElement(element, el.label || \"Form title\")\r\n\r\n\r\n                        break;\r\n                    case \"email\":\r\n                        element = createElement(\"input\")\r\n\r\n                        addAttributesToSpecifiedElement(element, arrayWithoutTypeProperty(el))\r\n\r\n                        break;\r\n                    case \"textarea\":\r\n                        element = createElement(\"textarea\")\r\n                       \r\n                        addAttributesToSpecifiedElement(element, arrayWithoutTypeProperty(el))\r\n\r\n                        \r\n                        break;\r\n                    case \"submit\":\r\n                        element = createElement(\"button\")\r\n\r\n                        addTextToElement(element, el.label || \"Send mail\")\r\n                        break\r\n                    default:\r\n                        throw Error(\"Invalid element type\")\r\n                }\r\n\r\n                addChildToParent(generatedForm, element)\r\n            })\r\n        } else {\r\n            addAttributeToElement(generatedForm, key, value)\r\n        }\r\n    })\r\n\r\n    console.log(wrapper);\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\ngenerateFormOnPattern(testSettings)\r\n\r\nexport { InputInterface }\r\n\r\n// DynamicTable\r\n\r\n\r\n"]}