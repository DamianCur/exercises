{"id":"../../node_modules/ts-node/dist-raw/node-repl-await.js","dependencies":[{"name":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\package.json","includedInParent":true,"mtime":1645658055197},{"name":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\node_modules\\ts-node\\package.json","includedInParent":true,"mtime":1644349660269},{"name":"./node-primordials","loc":{"line":21,"column":12,"index":523},"parent":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\node_modules\\ts-node\\dist-raw\\node-repl-await.js","resolved":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\node_modules\\ts-node\\dist-raw\\node-primordials.js"},{"name":"acorn","loc":{"line":23,"column":23,"index":570},"parent":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\node_modules\\ts-node\\dist-raw\\node-repl-await.js","resolved":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\node_modules\\ts-node\\node_modules\\acorn\\dist\\acorn.mjs"},{"name":"acorn-walk","loc":{"line":24,"column":21,"index":608},"parent":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\node_modules\\ts-node\\dist-raw\\node-repl-await.js","resolved":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\node_modules\\ts-node\\node_modules\\acorn-walk\\dist\\walk.mjs"},{"name":"repl","loc":{"line":25,"column":32,"index":655},"parent":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\node_modules\\ts-node\\dist-raw\\node-repl-await.js","resolved":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"}],"generated":{"js":"// copied from https://github.com/nodejs/node/blob/88799930794045795e8abac874730f9eba7e2300/lib/internal/repl/await.js\n'use strict';\n\nconst {\n  ArrayFrom,\n  ArrayPrototypeForEach,\n  ArrayPrototypeIncludes,\n  ArrayPrototypeJoin,\n  ArrayPrototypePop,\n  ArrayPrototypePush,\n  FunctionPrototype,\n  ObjectKeys,\n  RegExpPrototypeSymbolReplace,\n  StringPrototypeEndsWith,\n  StringPrototypeIncludes,\n  StringPrototypeIndexOf,\n  StringPrototypeRepeat,\n  StringPrototypeSplit,\n  StringPrototypeStartsWith,\n  SyntaxError,\n} = require('./node-primordials');\n\nconst parser = require('acorn').Parser;\nconst walk = require('acorn-walk');\nconst { Recoverable } = require('repl');\n\nfunction isTopLevelDeclaration(state) {\n  return state.ancestors[state.ancestors.length - 2] === state.body;\n}\n\nconst noop = FunctionPrototype;\nconst visitorsWithoutAncestors = {\n  ClassDeclaration(node, state, c) {\n    if (isTopLevelDeclaration(state)) {\n      state.prepend(node, `${node.id.name}=`);\n      ArrayPrototypePush(\n        state.hoistedDeclarationStatements,\n        `let ${node.id.name}; `\n      );\n    }\n\n    walk.base.ClassDeclaration(node, state, c);\n  },\n  ForOfStatement(node, state, c) {\n    if (node.await === true) {\n      state.containsAwait = true;\n    }\n    walk.base.ForOfStatement(node, state, c);\n  },\n  FunctionDeclaration(node, state, c) {\n    state.prepend(node, `${node.id.name}=`);\n    ArrayPrototypePush(\n      state.hoistedDeclarationStatements,\n      `var ${node.id.name}; `\n    );\n  },\n  FunctionExpression: noop,\n  ArrowFunctionExpression: noop,\n  MethodDefinition: noop,\n  AwaitExpression(node, state, c) {\n    state.containsAwait = true;\n    walk.base.AwaitExpression(node, state, c);\n  },\n  ReturnStatement(node, state, c) {\n    state.containsReturn = true;\n    walk.base.ReturnStatement(node, state, c);\n  },\n  VariableDeclaration(node, state, c) {\n    const variableKind = node.kind;\n    const isIterableForDeclaration = ArrayPrototypeIncludes(\n      ['ForOfStatement', 'ForInStatement'],\n      state.ancestors[state.ancestors.length - 2].type\n    );\n\n    if (variableKind === 'var' || isTopLevelDeclaration(state)) {\n      state.replace(\n        node.start,\n        node.start + variableKind.length + (isIterableForDeclaration ? 1 : 0),\n        variableKind === 'var' && isIterableForDeclaration ?\n          '' :\n          'void' + (node.declarations.length === 1 ? '' : ' (')\n      );\n\n      if (!isIterableForDeclaration) {\n        ArrayPrototypeForEach(node.declarations, (decl) => {\n          state.prepend(decl, '(');\n          state.append(decl, decl.init ? ')' : '=undefined)');\n        });\n\n        if (node.declarations.length !== 1) {\n          state.append(node.declarations[node.declarations.length - 1], ')');\n        }\n      }\n\n      const variableIdentifiersToHoist = [\n        ['var', []],\n        ['let', []],\n      ];\n      function registerVariableDeclarationIdentifiers(node) {\n        switch (node.type) {\n          case 'Identifier':\n            ArrayPrototypePush(\n              variableIdentifiersToHoist[variableKind === 'var' ? 0 : 1][1],\n              node.name\n            );\n            break;\n          case 'ObjectPattern':\n            ArrayPrototypeForEach(node.properties, (property) => {\n              registerVariableDeclarationIdentifiers(property.value);\n            });\n            break;\n          case 'ArrayPattern':\n            ArrayPrototypeForEach(node.elements, (element) => {\n              registerVariableDeclarationIdentifiers(element);\n            });\n            break;\n        }\n      }\n\n      ArrayPrototypeForEach(node.declarations, (decl) => {\n        registerVariableDeclarationIdentifiers(decl.id);\n      });\n\n      ArrayPrototypeForEach(\n        variableIdentifiersToHoist,\n        ({ 0: kind, 1: identifiers }) => {\n          if (identifiers.length > 0) {\n            ArrayPrototypePush(\n              state.hoistedDeclarationStatements,\n              `${kind} ${ArrayPrototypeJoin(identifiers, ', ')}; `\n            );\n          }\n        }\n      );\n    }\n\n    walk.base.VariableDeclaration(node, state, c);\n  }\n};\n\nconst visitors = {};\nfor (const nodeType of ObjectKeys(walk.base)) {\n  const callback = visitorsWithoutAncestors[nodeType] || walk.base[nodeType];\n  visitors[nodeType] = (node, state, c) => {\n    const isNew = node !== state.ancestors[state.ancestors.length - 1];\n    if (isNew) {\n      ArrayPrototypePush(state.ancestors, node);\n    }\n    callback(node, state, c);\n    if (isNew) {\n      ArrayPrototypePop(state.ancestors);\n    }\n  };\n}\n\nfunction processTopLevelAwait(src) {\n  const wrapPrefix = '(async () => { ';\n  const wrapped = `${wrapPrefix}${src} })()`;\n  const wrappedArray = ArrayFrom(wrapped);\n  let root;\n  try {\n    root = parser.parse(wrapped, { ecmaVersion: 'latest' });\n  } catch (e) {\n    if (StringPrototypeStartsWith(e.message, 'Unterminated '))\n      throw new Recoverable(e);\n    // If the parse error is before the first \"await\", then use the execution\n    // error. Otherwise we must emit this parse error, making it look like a\n    // proper syntax error.\n    const awaitPos = StringPrototypeIndexOf(src, 'await');\n    const errPos = e.pos - wrapPrefix.length;\n    if (awaitPos > errPos)\n      return null;\n    // Convert keyword parse errors on await into their original errors when\n    // possible.\n    if (errPos === awaitPos + 6 &&\n        StringPrototypeIncludes(e.message, 'Expecting Unicode escape sequence'))\n      return null;\n    if (errPos === awaitPos + 7 &&\n        StringPrototypeIncludes(e.message, 'Unexpected token'))\n      return null;\n    const line = e.loc.line;\n    const column = line === 1 ? e.loc.column - wrapPrefix.length : e.loc.column;\n    let message = '\\n' + StringPrototypeSplit(src, '\\n')[line - 1] + '\\n' +\n        StringPrototypeRepeat(' ', column) +\n        '^\\n\\n' + RegExpPrototypeSymbolReplace(/ \\([^)]+\\)/, e.message, '');\n    // V8 unexpected token errors include the token string.\n    if (StringPrototypeEndsWith(message, 'Unexpected token'))\n      message += \" '\" +\n        // Wrapper end may cause acorn to report error position after the source\n        ((src.length - 1) >= (e.pos - wrapPrefix.length)\n          ? src[e.pos - wrapPrefix.length]\n          : src[src.length - 1]) +\n        \"'\";\n    // eslint-disable-next-line no-restricted-syntax\n    throw new SyntaxError(message);\n  }\n  const body = root.body[0].expression.callee.body;\n  const state = {\n    body,\n    ancestors: [],\n    hoistedDeclarationStatements: [],\n    replace(from, to, str) {\n      for (let i = from; i < to; i++) {\n        wrappedArray[i] = '';\n      }\n      if (from === to) str += wrappedArray[from];\n      wrappedArray[from] = str;\n    },\n    prepend(node, str) {\n      wrappedArray[node.start] = str + wrappedArray[node.start];\n    },\n    append(node, str) {\n      wrappedArray[node.end - 1] += str;\n    },\n    containsAwait: false,\n    containsReturn: false\n  };\n\n  walk.recursive(body, state, visitors);\n\n  // Do not transform if\n  // 1. False alarm: there isn't actually an await expression.\n  // 2. There is a top-level return, which is not allowed.\n  if (!state.containsAwait || state.containsReturn) {\n    return null;\n  }\n\n  const last = body.body[body.body.length - 1];\n  if (last.type === 'ExpressionStatement') {\n    // For an expression statement of the form\n    // ( expr ) ;\n    // ^^^^^^^^^^   // last\n    //   ^^^^       // last.expression\n    //\n    // We do not want the left parenthesis before the `return` keyword;\n    // therefore we prepend the `return (` to `last`.\n    //\n    // On the other hand, we do not want the right parenthesis after the\n    // semicolon. Since there can only be more right parentheses between\n    // last.expression.end and the semicolon, appending one more to\n    // last.expression should be fine.\n    state.prepend(last, 'return (');\n    state.append(last.expression, ')');\n  }\n\n  return (\n    ArrayPrototypeJoin(state.hoistedDeclarationStatements, '') +\n    ArrayPrototypeJoin(wrappedArray, '')\n  );\n}\n\nmodule.exports = {\n  processTopLevelAwait\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-repl-await.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}}],"sources":{"../../node_modules/ts-node/dist-raw/node-repl-await.js":"// copied from https://github.com/nodejs/node/blob/88799930794045795e8abac874730f9eba7e2300/lib/internal/repl/await.js\n'use strict';\n\nconst {\n  ArrayFrom,\n  ArrayPrototypeForEach,\n  ArrayPrototypeIncludes,\n  ArrayPrototypeJoin,\n  ArrayPrototypePop,\n  ArrayPrototypePush,\n  FunctionPrototype,\n  ObjectKeys,\n  RegExpPrototypeSymbolReplace,\n  StringPrototypeEndsWith,\n  StringPrototypeIncludes,\n  StringPrototypeIndexOf,\n  StringPrototypeRepeat,\n  StringPrototypeSplit,\n  StringPrototypeStartsWith,\n  SyntaxError,\n} = require('./node-primordials');\n\nconst parser = require('acorn').Parser;\nconst walk = require('acorn-walk');\nconst { Recoverable } = require('repl');\n\nfunction isTopLevelDeclaration(state) {\n  return state.ancestors[state.ancestors.length - 2] === state.body;\n}\n\nconst noop = FunctionPrototype;\nconst visitorsWithoutAncestors = {\n  ClassDeclaration(node, state, c) {\n    if (isTopLevelDeclaration(state)) {\n      state.prepend(node, `${node.id.name}=`);\n      ArrayPrototypePush(\n        state.hoistedDeclarationStatements,\n        `let ${node.id.name}; `\n      );\n    }\n\n    walk.base.ClassDeclaration(node, state, c);\n  },\n  ForOfStatement(node, state, c) {\n    if (node.await === true) {\n      state.containsAwait = true;\n    }\n    walk.base.ForOfStatement(node, state, c);\n  },\n  FunctionDeclaration(node, state, c) {\n    state.prepend(node, `${node.id.name}=`);\n    ArrayPrototypePush(\n      state.hoistedDeclarationStatements,\n      `var ${node.id.name}; `\n    );\n  },\n  FunctionExpression: noop,\n  ArrowFunctionExpression: noop,\n  MethodDefinition: noop,\n  AwaitExpression(node, state, c) {\n    state.containsAwait = true;\n    walk.base.AwaitExpression(node, state, c);\n  },\n  ReturnStatement(node, state, c) {\n    state.containsReturn = true;\n    walk.base.ReturnStatement(node, state, c);\n  },\n  VariableDeclaration(node, state, c) {\n    const variableKind = node.kind;\n    const isIterableForDeclaration = ArrayPrototypeIncludes(\n      ['ForOfStatement', 'ForInStatement'],\n      state.ancestors[state.ancestors.length - 2].type\n    );\n\n    if (variableKind === 'var' || isTopLevelDeclaration(state)) {\n      state.replace(\n        node.start,\n        node.start + variableKind.length + (isIterableForDeclaration ? 1 : 0),\n        variableKind === 'var' && isIterableForDeclaration ?\n          '' :\n          'void' + (node.declarations.length === 1 ? '' : ' (')\n      );\n\n      if (!isIterableForDeclaration) {\n        ArrayPrototypeForEach(node.declarations, (decl) => {\n          state.prepend(decl, '(');\n          state.append(decl, decl.init ? ')' : '=undefined)');\n        });\n\n        if (node.declarations.length !== 1) {\n          state.append(node.declarations[node.declarations.length - 1], ')');\n        }\n      }\n\n      const variableIdentifiersToHoist = [\n        ['var', []],\n        ['let', []],\n      ];\n      function registerVariableDeclarationIdentifiers(node) {\n        switch (node.type) {\n          case 'Identifier':\n            ArrayPrototypePush(\n              variableIdentifiersToHoist[variableKind === 'var' ? 0 : 1][1],\n              node.name\n            );\n            break;\n          case 'ObjectPattern':\n            ArrayPrototypeForEach(node.properties, (property) => {\n              registerVariableDeclarationIdentifiers(property.value);\n            });\n            break;\n          case 'ArrayPattern':\n            ArrayPrototypeForEach(node.elements, (element) => {\n              registerVariableDeclarationIdentifiers(element);\n            });\n            break;\n        }\n      }\n\n      ArrayPrototypeForEach(node.declarations, (decl) => {\n        registerVariableDeclarationIdentifiers(decl.id);\n      });\n\n      ArrayPrototypeForEach(\n        variableIdentifiersToHoist,\n        ({ 0: kind, 1: identifiers }) => {\n          if (identifiers.length > 0) {\n            ArrayPrototypePush(\n              state.hoistedDeclarationStatements,\n              `${kind} ${ArrayPrototypeJoin(identifiers, ', ')}; `\n            );\n          }\n        }\n      );\n    }\n\n    walk.base.VariableDeclaration(node, state, c);\n  }\n};\n\nconst visitors = {};\nfor (const nodeType of ObjectKeys(walk.base)) {\n  const callback = visitorsWithoutAncestors[nodeType] || walk.base[nodeType];\n  visitors[nodeType] = (node, state, c) => {\n    const isNew = node !== state.ancestors[state.ancestors.length - 1];\n    if (isNew) {\n      ArrayPrototypePush(state.ancestors, node);\n    }\n    callback(node, state, c);\n    if (isNew) {\n      ArrayPrototypePop(state.ancestors);\n    }\n  };\n}\n\nfunction processTopLevelAwait(src) {\n  const wrapPrefix = '(async () => { ';\n  const wrapped = `${wrapPrefix}${src} })()`;\n  const wrappedArray = ArrayFrom(wrapped);\n  let root;\n  try {\n    root = parser.parse(wrapped, { ecmaVersion: 'latest' });\n  } catch (e) {\n    if (StringPrototypeStartsWith(e.message, 'Unterminated '))\n      throw new Recoverable(e);\n    // If the parse error is before the first \"await\", then use the execution\n    // error. Otherwise we must emit this parse error, making it look like a\n    // proper syntax error.\n    const awaitPos = StringPrototypeIndexOf(src, 'await');\n    const errPos = e.pos - wrapPrefix.length;\n    if (awaitPos > errPos)\n      return null;\n    // Convert keyword parse errors on await into their original errors when\n    // possible.\n    if (errPos === awaitPos + 6 &&\n        StringPrototypeIncludes(e.message, 'Expecting Unicode escape sequence'))\n      return null;\n    if (errPos === awaitPos + 7 &&\n        StringPrototypeIncludes(e.message, 'Unexpected token'))\n      return null;\n    const line = e.loc.line;\n    const column = line === 1 ? e.loc.column - wrapPrefix.length : e.loc.column;\n    let message = '\\n' + StringPrototypeSplit(src, '\\n')[line - 1] + '\\n' +\n        StringPrototypeRepeat(' ', column) +\n        '^\\n\\n' + RegExpPrototypeSymbolReplace(/ \\([^)]+\\)/, e.message, '');\n    // V8 unexpected token errors include the token string.\n    if (StringPrototypeEndsWith(message, 'Unexpected token'))\n      message += \" '\" +\n        // Wrapper end may cause acorn to report error position after the source\n        ((src.length - 1) >= (e.pos - wrapPrefix.length)\n          ? src[e.pos - wrapPrefix.length]\n          : src[src.length - 1]) +\n        \"'\";\n    // eslint-disable-next-line no-restricted-syntax\n    throw new SyntaxError(message);\n  }\n  const body = root.body[0].expression.callee.body;\n  const state = {\n    body,\n    ancestors: [],\n    hoistedDeclarationStatements: [],\n    replace(from, to, str) {\n      for (let i = from; i < to; i++) {\n        wrappedArray[i] = '';\n      }\n      if (from === to) str += wrappedArray[from];\n      wrappedArray[from] = str;\n    },\n    prepend(node, str) {\n      wrappedArray[node.start] = str + wrappedArray[node.start];\n    },\n    append(node, str) {\n      wrappedArray[node.end - 1] += str;\n    },\n    containsAwait: false,\n    containsReturn: false\n  };\n\n  walk.recursive(body, state, visitors);\n\n  // Do not transform if\n  // 1. False alarm: there isn't actually an await expression.\n  // 2. There is a top-level return, which is not allowed.\n  if (!state.containsAwait || state.containsReturn) {\n    return null;\n  }\n\n  const last = body.body[body.body.length - 1];\n  if (last.type === 'ExpressionStatement') {\n    // For an expression statement of the form\n    // ( expr ) ;\n    // ^^^^^^^^^^   // last\n    //   ^^^^       // last.expression\n    //\n    // We do not want the left parenthesis before the `return` keyword;\n    // therefore we prepend the `return (` to `last`.\n    //\n    // On the other hand, we do not want the right parenthesis after the\n    // semicolon. Since there can only be more right parentheses between\n    // last.expression.end and the semicolon, appending one more to\n    // last.expression should be fine.\n    state.prepend(last, 'return (');\n    state.append(last.expression, ')');\n  }\n\n  return (\n    ArrayPrototypeJoin(state.hoistedDeclarationStatements, '') +\n    ArrayPrototypeJoin(wrappedArray, '')\n  );\n}\n\nmodule.exports = {\n  processTopLevelAwait\n};\n"},"lineCount":255}},"error":null,"hash":"758e7d23968e8f23ec7c24917ed73900","cacheData":{"env":{}}}