{"id":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","dependencies":[{"name":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\package.json","includedInParent":true,"mtime":1645658055197},{"name":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\node_modules\\ts-node\\package.json","includedInParent":true,"mtime":1644349660269},{"name":"fs","loc":{"line":1,"column":19,"index":19},"parent":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\node_modules\\ts-node\\dist-raw\\node-internal-fs.js","resolved":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"}],"generated":{"js":"const fs = require('fs');\n\n// In node's core, this is implemented in C\n// https://github.com/nodejs/node/blob/v15.3.0/src/node_file.cc#L891-L985\nfunction internalModuleReadJSON(path) {\n  let string\n  try {\n    string = fs.readFileSync(path, 'utf8')\n  } catch (e) {\n    if (e.code === 'ENOENT') return []\n    throw e\n  }\n  // Node's implementation checks for the presence of relevant keys: main, name, type, exports, imports\n  // Node does this for performance to skip unnecessary parsing.\n  // This would slow us down and, based on our usage, we can skip it.\n  const containsKeys = true\n  return [string, containsKeys]\n}\n\nmodule.exports = {\n  internalModuleReadJSON\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/ts-node/dist-raw/node-internal-fs.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}}],"sources":{"../../node_modules/ts-node/dist-raw/node-internal-fs.js":"const fs = require('fs');\n\n// In node's core, this is implemented in C\n// https://github.com/nodejs/node/blob/v15.3.0/src/node_file.cc#L891-L985\nfunction internalModuleReadJSON(path) {\n  let string\n  try {\n    string = fs.readFileSync(path, 'utf8')\n  } catch (e) {\n    if (e.code === 'ENOENT') return []\n    throw e\n  }\n  // Node's implementation checks for the presence of relevant keys: main, name, type, exports, imports\n  // Node does this for performance to skip unnecessary parsing.\n  // This would slow us down and, based on our usage, we can skip it.\n  const containsKeys = true\n  return [string, containsKeys]\n}\n\nmodule.exports = {\n  internalModuleReadJSON\n};\n"},"lineCount":23}},"error":null,"hash":"b39ec49ac8d7b451bd2fc407a40df71c","cacheData":{"env":{}}}