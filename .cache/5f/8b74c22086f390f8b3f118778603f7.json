{"id":"../../node_modules/arg/index.js","dependencies":[{"name":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\package.json","includedInParent":true,"mtime":1645658055197},{"name":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\node_modules\\arg\\package.json","includedInParent":true,"mtime":1644349658706},{"name":"process","parent":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\node_modules\\arg\\index.js","resolved":"C:\\Users\\1420d\\OneDrive\\Desktop\\LHA_TS - EXERCISES\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\nconst flagSymbol = Symbol('arg flag');\n\nfunction arg(opts, {argv = process.argv.slice(2), permissive = false, stopAtPositional = false} = {}) {\n\tif (!opts) {\n\t\tthrow new Error('Argument specification object is required');\n\t}\n\n\tconst result = {_: []};\n\n\tconst aliases = {};\n\tconst handlers = {};\n\n\tfor (const key of Object.keys(opts)) {\n\t\tif (!key) {\n\t\t\tthrow new TypeError('Argument key cannot be an empty string');\n\t\t}\n\n\t\tif (key[0] !== '-') {\n\t\t\tthrow new TypeError(`Argument key must start with '-' but found: '${key}'`);\n\t\t}\n\n\t\tif (key.length === 1) {\n\t\t\tthrow new TypeError(`Argument key must have a name; singular '-' keys are not allowed: ${key}`);\n\t\t}\n\n\t\tif (typeof opts[key] === 'string') {\n\t\t\taliases[key] = opts[key];\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet type = opts[key];\n\t\tlet isFlag = false;\n\n\t\tif (Array.isArray(type) && type.length === 1 && typeof type[0] === 'function') {\n\t\t\tconst [fn] = type;\n\t\t\ttype = (value, name, prev = []) => {\n\t\t\t\tprev.push(fn(value, name, prev[prev.length - 1]));\n\t\t\t\treturn prev;\n\t\t\t};\n\t\t\tisFlag = fn === Boolean || fn[flagSymbol] === true;\n\t\t} else if (typeof type === 'function') {\n\t\t\tisFlag = type === Boolean || type[flagSymbol] === true;\n\t\t} else {\n\t\t\tthrow new TypeError(`Type missing or not a function or valid array type: ${key}`);\n\t\t}\n\n\t\tif (key[1] !== '-' && key.length > 2) {\n\t\t\tthrow new TypeError(`Short argument keys (with a single hyphen) must have only one character: ${key}`);\n\t\t}\n\n\t\thandlers[key] = [type, isFlag];\n\t}\n\n\tfor (let i = 0, len = argv.length; i < len; i++) {\n\t\tconst wholeArg = argv[i];\n\n\t\tif (stopAtPositional && result._.length > 0) {\n\t\t\tresult._ = result._.concat(argv.slice(i));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (wholeArg === '--') {\n\t\t\tresult._ = result._.concat(argv.slice(i + 1));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (wholeArg.length > 1 && wholeArg[0] === '-') {\n\t\t\t/* eslint-disable operator-linebreak */\n\t\t\tconst separatedArguments = (wholeArg[1] === '-' || wholeArg.length === 2)\n\t\t\t\t? [wholeArg]\n\t\t\t\t: wholeArg.slice(1).split('').map(a => `-${a}`);\n\t\t\t/* eslint-enable operator-linebreak */\n\n\t\t\tfor (let j = 0; j < separatedArguments.length; j++) {\n\t\t\t\tconst arg = separatedArguments[j];\n\t\t\t\tconst [originalArgName, argStr] = arg[1] === '-' ? arg.split(/=(.*)/, 2) : [arg, undefined];\n\n\t\t\t\tlet argName = originalArgName;\n\t\t\t\twhile (argName in aliases) {\n\t\t\t\t\targName = aliases[argName];\n\t\t\t\t}\n\n\t\t\t\tif (!(argName in handlers)) {\n\t\t\t\t\tif (permissive) {\n\t\t\t\t\t\tresult._.push(arg);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst err = new Error(`Unknown or unexpected option: ${originalArgName}`);\n\t\t\t\t\t\terr.code = 'ARG_UNKNOWN_OPTION';\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst [type, isFlag] = handlers[argName];\n\n\t\t\t\tif (!isFlag && ((j + 1) < separatedArguments.length)) {\n\t\t\t\t\tthrow new TypeError(`Option requires argument (but was followed by another short argument): ${originalArgName}`);\n\t\t\t\t}\n\n\t\t\t\tif (isFlag) {\n\t\t\t\t\tresult[argName] = type(true, argName, result[argName]);\n\t\t\t\t} else if (argStr === undefined) {\n\t\t\t\t\tif (\n\t\t\t\t\t\targv.length < i + 2 ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\targv[i + 1].length > 1 &&\n\t\t\t\t\t\t\t(argv[i + 1][0] === '-') &&\n\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\targv[i + 1].match(/^-?\\d*(\\.(?=\\d))?\\d*$/) &&\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\ttype === Number ||\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\t\t\t\t(typeof BigInt !== 'undefined' && type === BigInt)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst extended = originalArgName === argName ? '' : ` (alias for ${argName})`;\n\t\t\t\t\t\tthrow new Error(`Option requires argument: ${originalArgName}${extended}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult[argName] = type(argv[i + 1], argName, result[argName]);\n\t\t\t\t\t++i;\n\t\t\t\t} else {\n\t\t\t\t\tresult[argName] = type(argStr, argName, result[argName]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tresult._.push(wholeArg);\n\t\t}\n\t}\n\n\treturn result;\n}\n\narg.flag = fn => {\n\tfn[flagSymbol] = true;\n\treturn fn;\n};\n\n// Utility types\narg.COUNT = arg.flag((v, name, existingCount) => (existingCount || 0) + 1);\n\nmodule.exports = arg;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/arg/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/arg/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}}],"sources":{"../../node_modules/arg/index.js":"const flagSymbol = Symbol('arg flag');\n\nfunction arg(opts, {argv = process.argv.slice(2), permissive = false, stopAtPositional = false} = {}) {\n\tif (!opts) {\n\t\tthrow new Error('Argument specification object is required');\n\t}\n\n\tconst result = {_: []};\n\n\tconst aliases = {};\n\tconst handlers = {};\n\n\tfor (const key of Object.keys(opts)) {\n\t\tif (!key) {\n\t\t\tthrow new TypeError('Argument key cannot be an empty string');\n\t\t}\n\n\t\tif (key[0] !== '-') {\n\t\t\tthrow new TypeError(`Argument key must start with '-' but found: '${key}'`);\n\t\t}\n\n\t\tif (key.length === 1) {\n\t\t\tthrow new TypeError(`Argument key must have a name; singular '-' keys are not allowed: ${key}`);\n\t\t}\n\n\t\tif (typeof opts[key] === 'string') {\n\t\t\taliases[key] = opts[key];\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet type = opts[key];\n\t\tlet isFlag = false;\n\n\t\tif (Array.isArray(type) && type.length === 1 && typeof type[0] === 'function') {\n\t\t\tconst [fn] = type;\n\t\t\ttype = (value, name, prev = []) => {\n\t\t\t\tprev.push(fn(value, name, prev[prev.length - 1]));\n\t\t\t\treturn prev;\n\t\t\t};\n\t\t\tisFlag = fn === Boolean || fn[flagSymbol] === true;\n\t\t} else if (typeof type === 'function') {\n\t\t\tisFlag = type === Boolean || type[flagSymbol] === true;\n\t\t} else {\n\t\t\tthrow new TypeError(`Type missing or not a function or valid array type: ${key}`);\n\t\t}\n\n\t\tif (key[1] !== '-' && key.length > 2) {\n\t\t\tthrow new TypeError(`Short argument keys (with a single hyphen) must have only one character: ${key}`);\n\t\t}\n\n\t\thandlers[key] = [type, isFlag];\n\t}\n\n\tfor (let i = 0, len = argv.length; i < len; i++) {\n\t\tconst wholeArg = argv[i];\n\n\t\tif (stopAtPositional && result._.length > 0) {\n\t\t\tresult._ = result._.concat(argv.slice(i));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (wholeArg === '--') {\n\t\t\tresult._ = result._.concat(argv.slice(i + 1));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (wholeArg.length > 1 && wholeArg[0] === '-') {\n\t\t\t/* eslint-disable operator-linebreak */\n\t\t\tconst separatedArguments = (wholeArg[1] === '-' || wholeArg.length === 2)\n\t\t\t\t? [wholeArg]\n\t\t\t\t: wholeArg.slice(1).split('').map(a => `-${a}`);\n\t\t\t/* eslint-enable operator-linebreak */\n\n\t\t\tfor (let j = 0; j < separatedArguments.length; j++) {\n\t\t\t\tconst arg = separatedArguments[j];\n\t\t\t\tconst [originalArgName, argStr] = arg[1] === '-' ? arg.split(/=(.*)/, 2) : [arg, undefined];\n\n\t\t\t\tlet argName = originalArgName;\n\t\t\t\twhile (argName in aliases) {\n\t\t\t\t\targName = aliases[argName];\n\t\t\t\t}\n\n\t\t\t\tif (!(argName in handlers)) {\n\t\t\t\t\tif (permissive) {\n\t\t\t\t\t\tresult._.push(arg);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst err = new Error(`Unknown or unexpected option: ${originalArgName}`);\n\t\t\t\t\t\terr.code = 'ARG_UNKNOWN_OPTION';\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst [type, isFlag] = handlers[argName];\n\n\t\t\t\tif (!isFlag && ((j + 1) < separatedArguments.length)) {\n\t\t\t\t\tthrow new TypeError(`Option requires argument (but was followed by another short argument): ${originalArgName}`);\n\t\t\t\t}\n\n\t\t\t\tif (isFlag) {\n\t\t\t\t\tresult[argName] = type(true, argName, result[argName]);\n\t\t\t\t} else if (argStr === undefined) {\n\t\t\t\t\tif (\n\t\t\t\t\t\targv.length < i + 2 ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\targv[i + 1].length > 1 &&\n\t\t\t\t\t\t\t(argv[i + 1][0] === '-') &&\n\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\targv[i + 1].match(/^-?\\d*(\\.(?=\\d))?\\d*$/) &&\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\ttype === Number ||\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\t\t\t\t(typeof BigInt !== 'undefined' && type === BigInt)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst extended = originalArgName === argName ? '' : ` (alias for ${argName})`;\n\t\t\t\t\t\tthrow new Error(`Option requires argument: ${originalArgName}${extended}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult[argName] = type(argv[i + 1], argName, result[argName]);\n\t\t\t\t\t++i;\n\t\t\t\t} else {\n\t\t\t\t\tresult[argName] = type(argStr, argName, result[argName]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tresult._.push(wholeArg);\n\t\t}\n\t}\n\n\treturn result;\n}\n\narg.flag = fn => {\n\tfn[flagSymbol] = true;\n\treturn fn;\n};\n\n// Utility types\narg.COUNT = arg.flag((v, name, existingCount) => (existingCount || 0) + 1);\n\nmodule.exports = arg;\n"},"lineCount":146}},"error":null,"hash":"04a35df1a1d1a686617b8163ecc55903","cacheData":{"env":{}}}